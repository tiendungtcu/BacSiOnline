@using Tm.Data.ViewModels
@model IEnumerable<OrderListModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_PatientLayout.cshtml";
}

<!-- MAIN CONTENT-->
<div class="main-content">
    <div class="card">
        <div class="card-body card-block">
            <div class="row form-group">
                <div class="col-md-12">
                    <fieldset id="filter-panel">
                        <legend>
                            <i class="fa fa-filter"></i> Bộ lọc
                        </legend>
                        <div class="row form-group">
                            <div class="col-md-2">
                                <p>Tình trạng:</p>
                            </div>
                     @using(Html.BeginForm("Index", "PatientOrder", new { area = "Patient" }, FormMethod.Post,new { id="formFilter"}))
                     {
                            <div class="col-md-2">
                                @Html.DropDownList("typeFilter", new SelectList(ViewBag.StatusFilter, "Value", "Text"), new { @class = "form-control-sm" })
                            </div>
                     }
                        </div>
                     
                        <div class="row form-group">
                            <div class="col-md-2">
                                <p>Thời gian:</p>
                            </div>

                            <div class="col-md-2" id="insert-temp-after">
                                <select name="date-range" id="range-select" class="form-control-sm">
                                    <option value="thisWeek">Trong tuần này</option>
                                    <option value="lastWeek">Tuần trước</option>
                                    <option value="twoWeekAgo">2 tuần trước</option>
                                    <option value="byMonth">Trong tháng</option>
                                    <option value="byYear">Trong năm</option>
                                    <option value="custom">Tùy chỉnh</option>
                                </select>
                            </div>

                            <div class="col-md-1" id="temp-year">
                                <input type="number" min="1900" max="2200" value="2018" class="input-sm form-control-sm form-control">
                            </div>

                            <div class="col-md-6" id="temp-range">
                                <small>Từ ngày</small>
                                <input type="date" value="2018" class="input-sm form-control-sm form-control">
                                <small>Đến ngày</small>
                                <input type="date" value="2018" class="input-sm form-control-sm form-control">
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
            <hr>         
            @if (!string.IsNullOrEmpty(ViewBag.Message))
            {
                <div class="alert alert-warning">
                    <a href="#" class="close" data-dismiss="alert">&times;</a>
                    <strong>Thông báo!</strong> @ViewBag.Message
                </div>
            }

    <div class="row m-t-30">
        <div class="col-md-12">
            <div class="table-responsive m-b-40">
                <table id="record-table" class="table table-striped table-bordered" style="width: 100%;">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Id)</th>
                            <th>@Html.DisplayNameFor(model => model.Title)</th>
                            <th>@Html.DisplayNameFor(model => model.CreatedDate)</th>
                            <th>@Html.DisplayNameFor(model => model.Doctor)</th>
                            <th>@Html.DisplayNameFor(model => model.Status)</th>
                            <th>@Html.DisplayNameFor(model => model.DiagnosisNote)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            string colorFormat = item.Status.Equals("Đã chẩn đoán") ? "denied" : "process";
                            <tr>
                                <td>@Html.ActionLink(item.Id.ToString(), "Detail", "PatientOrder", new { Area = "Patient", id = item.Id }, new { })</td>
                                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                <td>@item.CreatedDate.Value.ToShortDateString()</td>
                                <td>@Html.DisplayFor(modelItem => item.Doctor)</td>
                                <td class="@colorFormat">@Html.DisplayFor(modelItem => item.Status)</td>
                                <td class="dt-diag-content readmore">@Html.DisplayFor(modelItem => item.DiagnosisNote)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
        </div>
    </div>

@section Scripts{
    <script src="~/Content/Common/datatable/DataTables-1.10.18/js/jquery.dataTables.min.js"></script>
    <script src="~/Content/Common/datatable/DataTables-1.10.18/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Content/Common/datatable/Select-1.2.6/js/dataTables.select.min.js"></script>
    <script>
        
        $(document).ready(function () {

            $('#typeFilter').on('change', function (e) {
                // $(location).attr('href', recUrl + '/' + this.value)
                $('#formFilter').submit();
            });

            // GLOBAL VAR
            var current = new Date($.now());

            // populate DataTable
            $("#record-table").DataTable({
                columnDefs: [
                    {
                        width: '25%',
                        targets: [1, 5]
                    }],
                language: {
                    lengthMenu: "Hiển thị _MENU_ bản ghi một trang",
                    zeroRecords: "Không tìm thấy kết quả nào!",
                    info: "Hiển thị trang _PAGE_/_PAGES_",
                    infoEmpty: "Hiện không có bản ghi nào",
                    infoFiltered: "Tìm kiếm trên tất cả _MAX_ bản ghi",
                    paginate: {
                        previous: "Trước",
                        next: "Tiếp"
                    },
                    search: "Tìm kiếm"
                },

            });

            // html for month
            var monthSelect = $('<select/>', {
                class: "form-control-sm",
                id: "temp-month"
            });

            initMonthSelect();
            function initMonthSelect() {
                for (let i = 1; i < 13; i++) {
                    monthSelect.append($('<option/>', {
                        value: i,
                        text: i,
                    }));
                }
                // select current month
                monthSelect.val(current.getMonth() + 1).change();
                $('#insert-temp-after').after(monthSelect);
                monthSelect.hide();
                $('#temp-year').hide();
                $('#temp-range').hide();
            }

            // <option value="thisWeek">Trong tuần này</option>
            // <option value="lastWeek">Tuần trước</option>
            // <option value="twoWeekAgo">2 tuần trước</option>
            // <option value="byMonth">Trong tháng</option>
            // <option value="byYear">Trong năm</option>
            // <option value="custom">Tùy chỉnh</option>
            $('#range-select').on('change', function () {
                var valueSelected = this.value;
                switch (valueSelected) {
                    case 'thisWeek':
                    case 'lastWeek':
                    case 'twoWeekAgo':
                        $('#insert-temp-after').nextAll().hide();
                        break;
                    case "byMonth":
                        $('#insert-temp-after').nextAll().hide();
                        $('#temp-month').show();
                        break;
                    case 'byYear':
                        $('#insert-temp-after').nextAll().hide();
                        $('#temp-year').show();
                        break;
                    case 'custom':
                        $('#insert-temp-after').nextAll().hide();
                        $('#temp-range').show();
                        break;
                    default:
                }
            });

            // Record creation date:
            // 1. Date control in HTML5 accepts in the format of Year-month-day
            // 2. If month is 9, it needs to be set as 09 not simply 9, apply for day as well
            function getCurrentDateStr() {
                var current = new Date($.now());
                var dd = ('0' + current.getDate()).slice(-2);
                var mm = ('0' + (current.getMonth() + 1)).slice(-2);
                var yyyy = current.getFullYear();
                return `${yyyy}-${mm}-${dd}`;
            }

            // Xử lý cột chẩn đoán: thêm link đọc thêm
            let ellipsis = '...';
            let more = 'Đọc thêm';
            let less = 'Thu gọn'; let showChar = 100, maxChar = 1500;
            $('.dt-diag-content.readmore').each(function () {
                let content = $(this).text(), len = content.length;

                // dài quá thì mở trang bệnh án mới lên cho mà đọc
                if (len > maxChar) {
                    var visiblePart = content.substr(0, showChar);
                    var hidePart = content.substr(showChar, len - showChar);
                    //let linkToRecordDetail = './1-patient-record-details.html'
                    //var html = `${visiblePart}${ellipsis}&nbsp;<a href='${linkToRecordDetail}' target='_blank'>${more}</a>`;
                    $(this).html(html);
                    return;
                }

                // vừa vừa mới xử lý thu gọn
                if (len > showChar) {
                    var visiblePart = content.substr(0, showChar);
                    var hidePart = content.substr(showChar, len - showChar);
                    var html = `${visiblePart}<span class='ellipsis'>${ellipsis}</span><span class='more-content'><span>${hidePart}</span>&nbsp;<a href='' class='more-link'>${more}</a></span>`;
                    $(this).html(html);
                }
                //console.log($(this).html());
            });

            // Xử lý nhãn đọc thêm
            $('.more-link').click(function () {
                var that = $(this);
                if (that.hasClass('less')) {
                    that.removeClass('less');
                    that.html(more);
                }
                else {
                    that.addClass('less');
                    that.html(less);
                }
                that.prev().toggle();
                that.parent().prev().toggle();

                return false;
            });

        });
    </script>

}